name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.105.0'
          extended: true
      - name: Cache Hugo
        uses: actions/cache@v3
        with:
          path: /tmp/hugo_cache
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies
      - name: Build
        run: pnpm run build

      - name: Checkout talks
        uses: actions/checkout@v3
        with:
          repository: 'artberri/reveal.js'
          ref: 'berriart-talks'
          path: './talks'
      - name: Setup npm cache
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install talks dependencies
        run: npm ci
        working-directory: './talks'
      - name: Build talks
        run: npm run build
        working-directory: './talks'
      - name: Create talks output dir
        run: mkdir -p ./public/talks
      - name: Copy talks
        run: cp -r ./talks/{dist,plugin,automation,code-kids,dependencias-npm,dns,http2-best-practices,personal-branding-developers,terraform-101,wasm-blazor,wear-os-101,wordpress-deployment,wordpress-deployment-es} ./public/talks/
      - name: Deploy
        run: pnpm run deploy
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
